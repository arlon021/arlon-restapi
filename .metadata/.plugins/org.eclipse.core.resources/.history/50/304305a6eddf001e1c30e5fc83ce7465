package br.com.arlon.services;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.atomic.AtomicLong;
import java.util.logging.Logger;

import org.hibernate.ResourceClosedException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.com.arlon.model.Person;
import br.com.arlon.respositories.PersonRepository;

@Service
public class PersonServices {
	
	private Logger logger = Logger.getLogger(PersonServices.class.getName());
	
	@Autowired
	PersonRepository personRepository;
	
	public Person findById(Long id) {
		
		logger.info("Fiding one person!");
		return personRepository.findById(id)
				.orElseThrow(() -> new ResourceClosedException("No records found for this ID!"));
	}
	
	public Person create(Person person) {
		
		logger.info("Creating one person");
		return personRepository.save(person);
	}
	
	public Person update(Person person) {
		
		logger.info("Update a person");
		
		Person entity = personRepository.findById(person.getId())
				.orElseThrow(() -> new ResourceClosedException("No records found for this ID!"));
		
		return personRepository.save(person);
	}
	
	public void delete(String id) {
		
		logger.info("Deleting one person");
	}
	
	public List<Person> findAll() {
		
		logger.info("Fiding all peaple!");
		return personRepository.findAll();
	}

	private Person MockPerson(int i) {
		Person person = new Person();
		
		person.setFistName("Person name " + i);
		person.setLastName("Last name " + i);
		person.setAddress("Some adrress in Brasil " + i);
		person.setGender("Male");
		return person;
	}

}
